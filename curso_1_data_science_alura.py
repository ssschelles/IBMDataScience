# -*- coding: utf-8 -*-
"""Aula 1 Data Science Alura.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S8T7GlW0TXg4K52XRNU_-lTVofhx99b-

AULA INTRODUTORIA DE DATA SCIENCE DA ALURA

ANÁLISE EXPLORATÓRIA DE DADOS

LIDANDO COM OS DADOS DE NOTAS
"""

import pandas as pd #IMPORTAR O PANDAS
notas = pd.read_csv('ratings.csv') #LER O ARQUIVO CSV
notas.head
notas.shape
notas.columns = ['usuarioID', 'filmeID', 'nota', 'momento']
notas['nota'].unique()  ##APARECER OS VALORES UMA UNICA VEZ 
notas['nota'].value_counts()  ##QUANTAS VEZES CADA NOTA APARECEU
notas['nota'].mean() ##A MEDIA DAS NOTAS
notas.nota.plot(kind = 'hist') ##UM JEITO MENOS BURRO DE CHAMAR A NOTA E O PEDIDO DE PLOTAGEM
notas.nota.median()
notas.nota.describe()

import seaborn as sns #IMPORTAR O SEABORN UTILIZADO P A PARTE VISUAL
sns.boxplot(notas.nota) #PEDIU P PLOTAR UM BOXPLOT

"""LIDANDO COM OS DADOS DE FILMES """

filmes = pd.read_csv('movies.csv') #LER O ARQUIVO FILMES
filmes.head() 
filmes.columns = ['filmeID', 'título', 'gênero'] #MUDAR O NOME DAS COLUNAS PARA PT 
filmes.head()

notas.query('filmeID==1').nota.mean()  ##A MEDIA DAS NOTAS DADAS PRO FILME ID 1

notas.head()  ##DA TABELA RATINGS 
notas.groupby('filmeID') ##AGRUPOU AS NOTAS PELOS FILME ID 
notas.groupby('filmeID').mean()['nota']

mediasPorFilme = notas.groupby('filmeID').mean().nota 
mediasPorFilme.head()

mediasPorFilme.plot(kind='hist')
mediasPorFilme

"""COMEÇANDO A TRABALHAR COM MATPLOTLIB

"""

import matplotlib.pyplot as plt ##IMPORTAÇAO DO MATPLOTLIB

plt.hist(mediasPorFilme)
plt.title('Histograma das Médias dos Filmes')

"""NOVO CONJUNTO DE DADOS TMDB 5000 FILMES """

tmdb = pd.read_csv('tmdb_5000_movies.csv')
tmdb.original_language.unique()  #TODAS AS LINGUAS MOSTRADAS UMA UNICA VEZ
tmdb.original_language.value_counts() #A CONTAGEM DE QTS VEZES CADA LINGUA APARECEU 
contagem_linguas = tmdb.original_language.value_counts().to_frame()
contagem_linguas = tmdb.original_language.value_counts().to_frame().reset_index() #RETIRA A LINGUAGEM COMO INDICE 
contagem_linguas.columns = ['original_language', 'total']
contagem_linguas.head()

sns.barplot(x = 'original_language', y= 'total', data = contagem_linguas)

"""COMO FAZER ESSA CONTAGEM DE MANEIRA MAIS DIRETA

UTILIZANDO O CATPLOT DO SEABORN
"""

sns.catplot(x='original_language', kind = 'count', data = tmdb)

"""CONTINUAÇÃO DA AULA (DE ONDE EU PAREI)

UTILIZANDO O MATPLOTLIB PARA UMA VISUALIZAÇÃO MELHOR DA TABELA ACIMA

PARA MELHOR VISUALIZAÇÃO DOS DADOS, É MAIS INTERESSANTE UMA COMPARAÇÃO DA LINGUA EM INGLES COM TODAS AS OUTRAS.
"""

#IMPORTAR TD DESDE O INICIO PARA PRÁTICA 
import pandas as pd
import seaborn as sns 
import matplotlib as plt

tmdb = pd.read_csv("tmdb_5000_movies.csv") #RELEMBRANDO
tmdb.head()
tmdb.original_language.head()
tmdb.original_language.value_counts().index #QUAIS AS LINGUAS EU TENHO NA LISTA 
tmdb.original_language.value_counts().values #QUAIS AS CONTAGENS EU TENHO NA LSITA 
contagem_linguas = tmdb.original_language.value_counts().to_frame() #TRANSFORMA EM TABELA
contagem_linguas.head() #AS LINGUAS ESTÃO COMO INDICES 
contagem_linguas = tmdb.original_language.value_counts().to_frame().reset_index() #RETIRA O INDICE 
contagem_linguas.head()
contagem_linguas.columns = ['original_language', 'total']
contagem_linguas.head()

total_por_lingua = tmdb.original_language.value_counts()
total_geral = total_por_lingua.sum() #O SOMATORIO TOTAL DAS LINGUAS #é so um numero
total_geral
total_em_ingles = total_por_lingua.loc['en']
total_em_ingles #eh so um numero 
total_resto = total_geral - total_em_ingles
total_resto #so um numero 
print(total_em_ingles, total_resto)

"""CRIAÇÃO DE DICIONARIO NO PANDAS PARA ESTABELECER OS DADOS QUE SERAO USADOS """

dados = {
    'língua' : ['inglês', 'outros'],
    'total' : [total_em_ingles, total_resto]
}

dados = pd.DataFrame(dados)
dados

sns.barplot(x = 'língua', y = 'total', data = dados)

"""AGORA, VAMOS PLOTAR UM GRAFICO PARA REPRESENTAR APENAS AS OUTRAS LINGUAS, SEM O INGLES """

total_por_lingua_de_outros_filmes = tmdb.query("original_language != 'en'").original_language.value_counts() #SO A COLUNA DE LINGUAS
total_por_lingua_de_outros_filmes.head()

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en'") #TODAS AS COLUNAS
filmes_sem_lingua_original_em_ingles.head()

sns.catplot(x = 'original_language', kind = 'count', data = filmes_sem_lingua_original_em_ingles,
            aspect = 2,
            palette = "GnBu_d",
            order = total_por_lingua_de_outros_filmes.index)

"""ANALISE ESPECIFICA DE FILMES """

notas.head
notas_do_toy_story = notas.query("filmeID==1")
notas_do_toy_story
notas_do_jumanji = notas.query("filmeID==2")
notas_do_jumanji

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.mean())

print("Mediana do Toy Story %.2f" % notas_do_toy_story.nota.median())
print("Mediana do Jumanji %.2f" % notas_do_jumanji.nota.median())

"""IMPORTAÇÃO DO NUMPY E CRIAÇÃO DE DADOS P EXPLICAR MEDIA E OUTRAS MEDIDAS UTEIS """

import numpy as np

np.array([2.5] * 10)
np.array([2.5] * 10).mean()

filme1 = np.append(np.array([2.5] * 10), np.array([3.5] * 10))

filme2 = np.append(np.array([5] * 10), np.array([1] * 10))

print(filme1.mean(), filme2.mean())
print(np.median(filme1), np.median(filme2))

print(np.mean(filme1), np.mean(filme2))
print(np.std(filme1), np.std(filme2))
print(np.median(filme1), np.median(filme2))

"""PARA SABER MAIS
GRAFICO LINEAR E REGRESSÃO COM SEABORN

POSSIVEIS GRAFICOS P PLOTAAR OS RESULTADOS
"""

import matplotlib.pyplot as plt ##IMPORTAÇAO DO MATPLOTLIB

plt.hist(filme1)
plt.hist(filme2)

plt.boxplot([filme1,filme2])

plt.boxplot([notas_do_toy_story.nota, notas_do_jumanji.nota])

"""O Seaborn nos permite explorar os dados quando ainda não os separamos."""

notas.head()

sns.boxplot(x = "filmeID", y = "nota", data = notas.query("filmeID in (1,2)"))

sns.boxplot(x = "filmeID", y = "nota", data = notas.query("filmeID in (1,2,3,4,5)"))

print("Desvio padrão do Jumanji %.2f" % notas_do_jumanji.nota.std(), "Desvio padrão do Toy Story %.2f" % notas_do_toy_story.nota.std())

"""FIM DESSAS ANALISES  
------------------------------------------------------------------------
"""

#EXEMPLO DE CODIGO
import seaborn as sns
sns.set(style="ticks")

# Load the example dataset for Anscombe's quartet
df = sns.load_dataset("anscombe")

# Show the results of a linear regression within each dataset
sns.lmplot(x="x", y="y", col="dataset", hue="dataset", data=df,
           col_wrap=2, ci=None, palette="muted", height=4,
           scatter_kws={"s": 50, "alpha": 1})

#O dataframe utilizado para essa plotagem já está dentro da biblioteca do Seaborn!